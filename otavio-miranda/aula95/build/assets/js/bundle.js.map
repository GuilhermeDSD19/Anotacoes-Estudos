{"version":3,"file":"bundle.js","mappings":"mBACe,MAAMA,EACnBC,YAAYC,GACVC,OAAOC,eAAeC,KAAM,WAAY,CACtCC,UAAU,EACVC,YAAY,EACZC,cAAc,EACdC,MAAOP,EAAWQ,QAAQ,OAAQ,KAEtC,CAEA,aACE,OAAOL,KAAKM,SAASC,OAAO,GAAGC,OAAO,MAAQR,KAAKM,QACrD,CAEAG,cACE,MAAMC,EAAgBV,KAAKM,SAASK,MAAM,GAAI,GACxCC,EAAUjB,EAAUkB,WAAWH,GAC/BI,EAAUnB,EAAUkB,WAAWH,EAAgBE,GACrDZ,KAAKe,QAAUL,EAAgBE,EAAUE,CAC3C,CAEAE,kBAAkBN,GAChB,IAAIO,EAAQ,EACRC,EAAUR,EAAcS,OAAS,EAErC,IAAI,IAAIC,KAAkBV,EACxBO,GAASC,EAAUG,OAAOD,GAC1BF,IAGF,MAAMI,EAAS,GAAML,EAAQ,GAC7B,OAAOK,GAAU,EAAIC,OAAOD,GAAU,GACxC,CAEAE,SACE,QAAIxB,KAAKM,WACmB,iBAAlBN,KAAKM,WACa,KAAzBN,KAAKM,SAASa,UACdnB,KAAK,eACRA,KAAKS,cAEET,KAAKe,UAAYf,KAAKM,YAC/B,ECzCa,MAAMmB,EACnBC,KAAKC,EAAM,IAAWC,EAAM,WAC1B,OAAOL,OAAOM,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,GACzD,CAEAK,UAAUC,GACR,OACEA,EAAItB,MAAM,EAAG,GAAK,IAClBsB,EAAItB,MAAM,EAAG,GAAK,IAClBsB,EAAItB,MAAM,EAAG,GAAK,IAClBsB,EAAItB,MAAM,EAAG,GAEjB,CAEAF,cACoBT,KAAK0B,OAAvB,MACMd,EAAUjB,EAAUkB,WAAWqB,cAC/BpB,EAAUnB,EAAUkB,WAAWqB,aAAetB,GAC9CuB,EAAUD,aAAetB,EAAUE,EACzC,OAAOd,KAAKgC,UAAUG,EACxB,GClBF,WACE,MAAMC,EAAO,IAAIX,EACCY,SAASC,cAAc,eAC/BC,UAAYH,EAAK3B,aAC5B,CAJD,E","sources":["webpack://aula93/./src/assets/js/ValidaCPF.js","webpack://aula93/./src/assets/js/GeraCPF.js","webpack://aula93/./src/index.js"],"sourcesContent":["// 705.484.450-52 070.987.720-03\nexport default class ValidaCPF {\n  constructor(cpfEnviado) {\n    Object.defineProperty(this, 'cpfLimpo', {\n      writable: false,\n      enumerable: true,\n      configurable: false,\n      value: cpfEnviado.replace(/\\D+/g, '')\n    });\n  }\n\n  éSequência() {\n    return this.cpfLimpo.charAt(0).repeat(11) === this.cpfLimpo;\n  }\n\n  geraNovoCpf() {\n    const cpfSemDigitos = this.cpfLimpo.slice(0, -2);\n    const digito1 = ValidaCPF.geraDigito(cpfSemDigitos);\n    const digito2 = ValidaCPF.geraDigito(cpfSemDigitos + digito1);\n    this.novoCPF = cpfSemDigitos + digito1 + digito2;\n  }\n\n  static geraDigito(cpfSemDigitos) {\n    let total = 0;\n    let reverso = cpfSemDigitos.length + 1;\n\n    for(let stringNumerica of cpfSemDigitos) {\n      total += reverso * Number(stringNumerica);\n      reverso--;\n    }\n\n    const digito = 11 - (total % 11);\n    return digito <= 9 ? String(digito) : '0';\n  }\n\n  valida() {\n    if(!this.cpfLimpo) return false;\n    if(typeof this.cpfLimpo !== 'string') return false;\n    if(this.cpfLimpo.length !== 11) return false;\n    if(this.éSequência()) return false;\n    this.geraNovoCpf();\n\n    return this.novoCPF === this.cpfLimpo;\n  }\n}\n","import ValidaCPF from './ValidaCPF';\n\nexport default class GeraCPF {\n  rand(min = 100000000, max = 999999999) {\n    return String(Math.floor(Math.random() * (max - min) + min));\n  }\n\n  formatado(cpf) {\n    return (\n      cpf.slice(0, 3) + '.' +\n      cpf.slice(3, 6) + '.' +\n      cpf.slice(6, 9) + '-' +\n      cpf.slice(9, 11)\n    );\n  }\n\n  geraNovoCpf() {\n    const cpfSemDig = this.rand();\n    const digito1 = ValidaCPF.geraDigito(cpfSemDigito);\n    const digito2 = ValidaCPF.geraDigito(cpfSemDigito + digito1);\n    const novoCpf = cpfSemDigito + digito1 + digito2;\n    return this.formatado(novoCpf);\n  }\n}\n","import GeraCPF from './assets/js/GeraCPF';\n\nimport './assets/css/style.css';\n\n(function() {\n  const gera = new GeraCPF();\n  const cpfGerado = document.querySelector('.cpf-gerado');\n  cpfGerado.innerHTML = gera.geraNovoCpf();\n})();\n"],"names":["ValidaCPF","constructor","cpfEnviado","Object","defineProperty","this","writable","enumerable","configurable","value","replace","cpfLimpo","charAt","repeat","geraNovoCpf","cpfSemDigitos","slice","digito1","geraDigito","digito2","novoCPF","static","total","reverso","length","stringNumerica","Number","digito","String","valida","GeraCPF","rand","min","max","Math","floor","random","formatado","cpf","cpfSemDigito","novoCpf","gera","document","querySelector","innerHTML"],"sourceRoot":""}